import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.21'
	// A persistence framework is middleware that assists in the storage and retrieval of
	// information between applications and databases, especially relational databases.
	// In this case (hibernate): tictactoe games
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.21'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.ninja-squad:springmockk:3.1.2'
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
}

// Although Java does not allow one to express null-safety in its type-system,
// Spring Framework provides null-safety of the whole Spring Framework API via tooling-friendly annotations
// declared in the org.springframework.lang package. By default, types from Java APIs used in Kotlin are recognized
// as platform types for which null-checks are relaxed. Kotlin support for JSR 305 annotations + Spring nullability
// annotations provide null-safety for the whole Spring Framework API to Kotlin developers, with the advantage of
// dealing with null related issues at compile time. This feature can be enabled by adding the -Xjsr305 compiler flag
// with the strict options.

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
